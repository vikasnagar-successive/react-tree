{"ast":null,"code":"var _jsxFileName = \"/home/vikas.nagar/Projects/react_tree/pc_tree/src/components/NewList.js\",\n    _s = $RefreshSig$();\n\nimport List from \"./List\";\nimport { FaMinusSquare, FaPlusSquare, FaTrash } from \"react-icons/fa\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewList = _ref => {\n  _s();\n\n  let {\n    list,\n    onDelete,\n    parent\n  } = _ref;\n  console.log(\"ðŸš€ ~ file: NewList.js ~ line 6 ~ NewList ~ list\", list);\n  const [toggleList, setToggle] = useState({});\n  const [toggleKey, setToggleKey] = useState(\"\");\n\n  const onToggle = async e => {\n    if (toggleList[e] === true || toggleList[e] === false) {\n      toggleList[e] = !toggleList[e];\n      setToggle(toggleList);\n    } else {\n      toggleList[e] = true;\n      setToggle(toggleList);\n    }\n\n    if (toggleKey === e) {\n      setToggleKey(null);\n    } else {\n      setToggleKey(e);\n    }\n  };\n\n  const deletekey = async (p, e) => {\n    console.log(\"Parent\", p, \"\\nKey\", e);\n    const delKey = p ? `${p}.${e}` : e;\n    console.log(\"delete Path\", delKey);\n    onDelete({\n      delKey\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: list.length ? list.map(e => /*#__PURE__*/_jsxDEV(\"ul\", {\n      type: \"none\",\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        item: e,\n        onDelete: onDelete,\n        parent: parent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)) : null\n  }, void 0, false);\n};\n\n_s(NewList, \"6+AJfxEBMKsYfvqFtpAOh8ruxmU=\");\n\n_c = NewList;\nexport default NewList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewList\");","map":{"version":3,"sources":["/home/vikas.nagar/Projects/react_tree/pc_tree/src/components/NewList.js"],"names":["List","FaMinusSquare","FaPlusSquare","FaTrash","useState","NewList","list","onDelete","parent","console","log","toggleList","setToggle","toggleKey","setToggleKey","onToggle","e","deletekey","p","delKey","length","map","id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,OAAtC,QAAqD,gBAArD;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,OAAO,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAA+B;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ,EAA+DJ,IAA/D;AAEA,QAAM,CAACK,UAAD,EAAaC,SAAb,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMW,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5B,QAAIL,UAAU,CAACK,CAAD,CAAV,KAAkB,IAAlB,IAA0BL,UAAU,CAACK,CAAD,CAAV,KAAkB,KAAhD,EAAuD;AACrDL,MAAAA,UAAU,CAACK,CAAD,CAAV,GAAgB,CAACL,UAAU,CAACK,CAAD,CAA3B;AACAJ,MAAAA,SAAS,CAACD,UAAD,CAAT;AACD,KAHD,MAGO;AACLA,MAAAA,UAAU,CAACK,CAAD,CAAV,GAAgB,IAAhB;AACAJ,MAAAA,SAAS,CAACD,UAAD,CAAT;AACD;;AAED,QAAIE,SAAS,KAAKG,CAAlB,EAAqB;AACnBF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAACE,CAAD,CAAZ;AACD;AACF,GAdD;;AAgBA,QAAMC,SAAS,GAAG,OAAOC,CAAP,EAAUF,CAAV,KAAgB;AAChCP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBQ,CAAtB,EAAyB,OAAzB,EAAkCF,CAAlC;AACA,UAAMG,MAAM,GAAGD,CAAC,GAAI,GAAEA,CAAE,IAAGF,CAAE,EAAb,GAAiBA,CAAjC;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BS,MAA3B;AACAZ,IAAAA,QAAQ,CAAC;AAAEY,MAAAA;AAAF,KAAD,CAAR;AACD,GALD;;AAOA,sBACE;AAAA,cACGb,IAAI,CAACc,MAAL,GACGd,IAAI,CAACe,GAAL,CAAUL,CAAD,iBACP;AAAI,MAAA,IAAI,EAAC,MAAT;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,CAAhB;AAAmB,QAAA,QAAQ,EAAET,QAA7B;AAAuC,QAAA,MAAM,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF,OAAqBQ,CAAC,CAACM,EAAvB;AAAA;AAAA;AAAA;AAAA,YADF,CADH,GAMG;AAPN,mBADF;AAWD,CAxCD;;GAAMjB,O;;KAAAA,O;AA0CN,eAAeA,OAAf","sourcesContent":["import List from \"./List\";\nimport { FaMinusSquare, FaPlusSquare, FaTrash } from \"react-icons/fa\";\nimport { useState } from \"react\";\n\nconst NewList = ({ list, onDelete, parent }) => {\n  console.log(\"ðŸš€ ~ file: NewList.js ~ line 6 ~ NewList ~ list\", list);\n\n  const [toggleList, setToggle] = useState({});\n  const [toggleKey, setToggleKey] = useState(\"\");\n\n  const onToggle = async (e) => {\n    if (toggleList[e] === true || toggleList[e] === false) {\n      toggleList[e] = !toggleList[e];\n      setToggle(toggleList);\n    } else {\n      toggleList[e] = true;\n      setToggle(toggleList);\n    }\n\n    if (toggleKey === e) {\n      setToggleKey(null);\n    } else {\n      setToggleKey(e);\n    }\n  };\n\n  const deletekey = async (p, e) => {\n    console.log(\"Parent\", p, \"\\nKey\", e);\n    const delKey = p ? `${p}.${e}` : e;\n    console.log(\"delete Path\", delKey);\n    onDelete({ delKey });\n  };\n\n  return (\n    <>\n      {list.length\n        ? list.map((e) => (\n            <ul type=\"none\" key={e.id}>\n              <ListItem item={e} onDelete={onDelete} parent={parent} />\n            </ul>\n          ))\n        : null}\n    </>\n  );\n};\n\nexport default NewList;\n"]},"metadata":{},"sourceType":"module"}