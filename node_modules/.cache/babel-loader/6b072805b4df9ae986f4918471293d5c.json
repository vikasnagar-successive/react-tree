{"ast":null,"code":"var _jsxFileName = \"/home/vikas.nagar/Projects/react_tree/pc_tree/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport AddItem from \"./components/AddItem\";\nimport DeletePopup from \"./components/DeletePopup\";\nimport Header from \"./components/Header\";\nimport TreeList from \"./components/TreeList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [toggleKey, setToggleKey] = useState(\"\");\n  const [dataList, setData] = useState({});\n  const [parents, setParents] = useState({});\n  useEffect(() => {\n    const getData = async () => {\n      const data = await fetchData();\n      setData(data);\n      const newParents = {};\n\n      for (let key in data) {\n        newParents[key] = \"\";\n      }\n\n      setParents(newParents);\n    };\n\n    getData();\n  }, []);\n\n  const fetchData = async () => {\n    const res = await fetch(`http://localhost:5000/list`);\n    const data = await res.json(); // console.log(data);\n\n    return data;\n  };\n\n  const addNewkey = async obj => {\n    console.log(obj);\n    console.log(dataList);\n\n    if (obj.heirarchy === \"parent\") {\n      dataList[obj.text] = {};\n    } else {\n      dataList[obj.parent][obj.text] = {};\n    }\n\n    const res = await fetch(`http://localhost:5000/list`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(dataList)\n    });\n    await res.json(); // setData(resData);\n\n    const data = await fetchData();\n    setData(data);\n    const newParents = {};\n\n    for (let key in data) {\n      newParents[key] = \"\";\n    }\n\n    setParents(newParents);\n  };\n\n  const onDelete = async obj => {\n    console.log(obj);\n    console.log(dataList); // if (obj.heirarchy === \"parent\") {\n    //   dataList[obj.text] = {};\n    // } else {\n    //   dataList[obj.parent][obj.text] = {};\n    // }\n    // const res = await fetch(`http://localhost:5000/list`, {\n    //   method: \"PUT\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(dataList),\n    // });\n    // await res.json();\n    // // setData(resData);\n    // const data = await fetchData();\n    // setData(data);\n    // const newParents = {};\n    // for (let key in data) {\n    //   newParents[key] = \"\";\n    // }\n    // setParents(newParents);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddItem, {\n      parents: parents,\n      onAdd: addNewkey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TreeList, {\n      data: dataList,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeletePopup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"J6bM5piRVAkXUu2RkEoK+leS6uk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/vikas.nagar/Projects/react_tree/pc_tree/src/App.js"],"names":["useEffect","useState","AddItem","DeletePopup","Header","TreeList","App","dataList","setData","parents","setParents","getData","data","fetchData","newParents","key","res","fetch","json","addNewkey","obj","console","log","heirarchy","text","parent","method","headers","body","JSON","stringify","onDelete"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport AddItem from \"./components/AddItem\";\nimport DeletePopup from \"./components/DeletePopup\";\nimport Header from \"./components/Header\";\nimport TreeList from \"./components/TreeList\";\n\nfunction App() {\n  // const [toggleKey, setToggleKey] = useState(\"\");\n  const [dataList, setData] = useState({});\n  const [parents, setParents] = useState({});\n\n  useEffect(() => {\n    const getData = async () => {\n      const data = await fetchData();\n      setData(data);\n      const newParents = {};\n      for (let key in data) {\n        newParents[key] = \"\";\n      }\n      setParents(newParents);\n    };\n\n    getData();\n  }, []);\n\n  const fetchData = async () => {\n    const res = await fetch(`http://localhost:5000/list`);\n    const data = await res.json();\n    // console.log(data);\n    return data;\n  };\n\n  const addNewkey = async (obj) => {\n    console.log(obj);\n    console.log(dataList);\n    if (obj.heirarchy === \"parent\") {\n      dataList[obj.text] = {};\n    } else {\n      dataList[obj.parent][obj.text] = {};\n    }\n\n    const res = await fetch(`http://localhost:5000/list`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(dataList),\n    });\n    await res.json();\n    // setData(resData);\n\n    const data = await fetchData();\n    setData(data);\n    const newParents = {};\n    for (let key in data) {\n      newParents[key] = \"\";\n    }\n    setParents(newParents);\n  };\n\n  const onDelete = async (obj) => {\n    console.log(obj);\n    console.log(dataList);\n    // if (obj.heirarchy === \"parent\") {\n    //   dataList[obj.text] = {};\n    // } else {\n    //   dataList[obj.parent][obj.text] = {};\n    // }\n\n    // const res = await fetch(`http://localhost:5000/list`, {\n    //   method: \"PUT\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(dataList),\n    // });\n    // await res.json();\n    // // setData(resData);\n\n    // const data = await fetchData();\n    // setData(data);\n    // const newParents = {};\n    // for (let key in data) {\n    //   newParents[key] = \"\";\n    // }\n    // setParents(newParents);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <AddItem parents={parents} onAdd={addNewkey} />\n      <TreeList data={dataList} onDelete={onDelete} />\n      <DeletePopup />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}