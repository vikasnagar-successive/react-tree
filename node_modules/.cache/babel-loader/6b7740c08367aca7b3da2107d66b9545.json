{"ast":null,"code":"var _jsxFileName = \"/home/vikas.nagar/Projects/react_tree/pc_tree/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport AddItem from \"./components/AddItem\";\nimport Header from \"./components/Header\";\nimport Modal from \"./components/modal\";\nimport TreeList from \"./components/TreeList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [toggleKey, setToggleKey] = useState(\"\");\n  const [dataList, setData] = useState({});\n  const [parents, setParents] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const getData = async () => {\n      console.log(`*******************************************`);\n      const data = await fetchData();\n      setData(data);\n      const newParents = {};\n\n      for (let key in data) {\n        newParents[key] = \"\";\n      }\n\n      setParents(newParents);\n    };\n\n    getData();\n  }, []);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  const fetchData = async () => {\n    const res = await fetch(`http://localhost:5000/list`);\n    const data = await res.json(); // console.log(data);\n\n    return data;\n  };\n\n  const addNewkey = async obj => {\n    console.log(obj);\n    console.log(dataList);\n\n    if (obj.heirarchy === \"parent\") {\n      dataList[obj.text] = {};\n    } else {\n      dataList[obj.parent][obj.text] = {};\n    }\n\n    const res = await fetch(`http://localhost:5000/list`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(dataList)\n    });\n    await res.json(); // setData(resData);\n\n    const data = await fetchData();\n    setData(data);\n    const newParents = {};\n\n    for (let key in data) {\n      newParents[key] = \"\";\n    }\n\n    setParents(newParents);\n  };\n\n  const onDelete = async obj => {\n    console.log(obj.delKey);\n    console.log(dataList);\n    const accessKey = obj.delKey.split(\".\");\n    const accessLen = accessKey.length;\n    console.log(\"accessKey\", accessKey);\n    let st = \"\";\n\n    for (let i = 0; i < accessLen; i++) {\n      console.log(i);\n      console.log(accessKey[i]);\n      st += `[${accessKey[i]}]`;\n    }\n\n    console.log(st);\n    console.log([accessKey[0]][accessKey[1]]);\n    console.log(dataList[st]);\n    console.log(dataList[accessKey[0]][accessKey[1]]);\n    console.log(Object.keys(dataList.accessKey).length); // openModal();\n    // if (obj.heirarchy === \"parent\") {\n    //   dataList[obj.text] = {};\n    // } else {\n    //   dataList[obj.parent][obj.text] = {};\n    // }\n    // const res = await fetch(`http://localhost:5000/list`, {\n    //   method: \"PUT\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(dataList),\n    // });\n    // await res.json();\n    // // setData(resData);\n    // const data = await fetchData();\n    // setData(data);\n    // const newParents = {};\n    // for (let key in data) {\n    //   newParents[key] = \"\";\n    // }\n    // setParents(newParents);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddItem, {\n      parents: parents,\n      onAdd: addNewkey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TreeList, {\n      data: dataList,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), showModal ? /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"modal\",\n      show: showModal,\n      close: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NYBgJ/JUDbRfLZQHV+Wwfyoxtlw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/vikas.nagar/Projects/react_tree/pc_tree/src/App.js"],"names":["useEffect","useState","AddItem","Header","Modal","TreeList","App","dataList","setData","parents","setParents","showModal","setShowModal","getData","console","log","data","fetchData","newParents","key","openModal","prev","res","fetch","json","addNewkey","obj","heirarchy","text","parent","method","headers","body","JSON","stringify","onDelete","delKey","accessKey","split","accessLen","length","st","i","Object","keys"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport AddItem from \"./components/AddItem\";\nimport Header from \"./components/Header\";\nimport Modal from \"./components/modal\";\nimport TreeList from \"./components/TreeList\";\n\nfunction App() {\n  // const [toggleKey, setToggleKey] = useState(\"\");\n  const [dataList, setData] = useState({});\n  const [parents, setParents] = useState({});\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const getData = async () => {\n      console.log(`*******************************************`);\n      const data = await fetchData();\n      setData(data);\n      const newParents = {};\n      for (let key in data) {\n        newParents[key] = \"\";\n      }\n      setParents(newParents);\n    };\n\n    getData();\n  }, []);\n\n  const openModal = () => {\n    setShowModal((prev) => !prev);\n  };\n\n  const fetchData = async () => {\n    const res = await fetch(`http://localhost:5000/list`);\n    const data = await res.json();\n    // console.log(data);\n    return data;\n  };\n\n  const addNewkey = async (obj) => {\n    console.log(obj);\n    console.log(dataList);\n    if (obj.heirarchy === \"parent\") {\n      dataList[obj.text] = {};\n    } else {\n      dataList[obj.parent][obj.text] = {};\n    }\n\n    const res = await fetch(`http://localhost:5000/list`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(dataList),\n    });\n    await res.json();\n    // setData(resData);\n\n    const data = await fetchData();\n    setData(data);\n    const newParents = {};\n    for (let key in data) {\n      newParents[key] = \"\";\n    }\n    setParents(newParents);\n  };\n\n  const onDelete = async (obj) => {\n    console.log(obj.delKey);\n    console.log(dataList);\n    const accessKey = obj.delKey.split(\".\");\n    const accessLen = accessKey.length;\n    console.log(\"accessKey\", accessKey);\n    let st = \"\";\n    for (let i = 0; i < accessLen; i++) {\n      console.log(i);\n      console.log(accessKey[i]);\n      st += `[${accessKey[i]}]`;\n    }\n    console.log(st);\n    console.log([accessKey[0]][accessKey[1]]);\n    console.log(dataList[st]);\n    console.log(dataList[accessKey[0]][accessKey[1]]);\n    console.log(Object.keys(dataList.accessKey).length);\n    // openModal();\n    // if (obj.heirarchy === \"parent\") {\n    //   dataList[obj.text] = {};\n    // } else {\n    //   dataList[obj.parent][obj.text] = {};\n    // }\n\n    // const res = await fetch(`http://localhost:5000/list`, {\n    //   method: \"PUT\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(dataList),\n    // });\n    // await res.json();\n    // // setData(resData);\n\n    // const data = await fetchData();\n    // setData(data);\n    // const newParents = {};\n    // for (let key in data) {\n    //   newParents[key] = \"\";\n    // }\n    // setParents(newParents);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <AddItem parents={parents} onAdd={addNewkey} />\n      <TreeList data={dataList} onDelete={onDelete} />\n      {showModal ? (\n        <Modal className=\"modal\" show={showModal} close={openModal}></Modal>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}